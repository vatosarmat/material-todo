{"version":3,"sources":["stateStorage.ts","components/ItemEditForm.tsx","components/App.tsx","index.tsx"],"names":["itemAction","add","createStandardAction","toggle","remove","edit","reducer","createReducer","items","ITEM/ADD","state","_ref","payload","Object","objectSpread","concat","toConsumableArray","id","cuid","slug","done","ITEM/TOGGLE","_ref2","map","item","ITEM/REMOVE","_ref3","filter","ITEM/EDIT","_ref4","ItemEditForm","_this","props","handleInputChange","evt","_evt$target","target","name","value","setState","defineProperty","handleApplyClick","onApply","handleKeyDown","key","onCancel","_this$state","this","title","description","react_default","a","createElement","FormControl","fullWidth","TextField","label","autoFocus","error","onKeyDown","onChange","multiline","FormGroup","row","style","justifyContent","Tooltip","open","IconButton","color","onClick","disabled","index_es","placement","Cancel","Component","defaultProps","App","activeItem","addForm","handleItemToggle","itemToggle","handleMenuOpen","element","currentTarget","newActive","find","menuAnchorElement","status","handleMenuClose","resetActiveItem","handleMenuItemEdit","handleItemEditApply","data","itemEdit","handleItemEditCancel","handleItemAddFormOpen","handleItemAddApply","itemAdd","hideAddForm","handleItemAddCancel","handleMenuItemRemove","handleMenuItemRemoveExited","itemRemove","Menu","anchorEl","MenuListProps","onClose","MenuItem","minHeight","isItemActive","isEdit","ListItem","divider","selected","ListItemIcon","minWidth","Checkbox","disableRipple","checkedIcon","icon","bind","checked","ItemEditForm_ItemEditForm","ListItemText","textDecoration","undefined","primary","secondary","ListItemSecondaryAction","MoreVert","fontSize","Add","enterDelay","leaveDelay","button","_this2","Container","maxWidth","marginTop","Box","Typography","variant","component","align","renderMenu","List","idx","Collapse","enter","appear","in","onExited","renderListItem","renderAddItem","connect","pConfig","storage","pReducer","persistReducer","initialState","store","createStore","composeWithDevTools","persistor","persistStore","ReactDOM","render","es","integration_react","loading","CssBaseline","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.adf5f1d2.chunk.js","sourcesContent":["import { createStandardAction, createReducer, ActionType } from 'typesafe-actions';\nimport cuid from 'cuid'\n\n\n//toggle, edit, remove\nexport interface ItemId {\n  readonly id: string\n}\n\n//add\nexport interface ItemData {\n  readonly title: string\n  readonly description?: string\n}\n\n//state\nexport interface Item extends ItemId, ItemData {\n  readonly done: boolean\n}\n\nexport interface State {\n  items: ReadonlyArray<Item>\n}\n\nconst defaultState: State = {\n  items: [],\n};\n\nconst itemAction = {\n  add: createStandardAction('ITEM/ADD')<ItemData>(),\n  toggle: createStandardAction('ITEM/TOGGLE')<ItemId>(),\n  remove: createStandardAction('ITEM/REMOVE')<ItemId>(),\n  edit: createStandardAction('ITEM/EDIT')<ItemId & ItemData>()\n}\n\ntype RootAction = ActionType<typeof itemAction>\n\nconst reducer = createReducer<State, RootAction>(defaultState, {\n  'ITEM/ADD': (state, {payload}) => ({\n    ...state,\n    items: [...state.items, {id: 'item_'+cuid.slug(), done: false, ...payload}]\n  }),\n\n  'ITEM/TOGGLE': (state, {payload}) => ({\n    ...state,\n    items: state.items.map(item => item.id === payload.id ? {...item, done: !item.done} : item)\n  }),\n\n  'ITEM/REMOVE': (state, {payload}) => ({\n    ...state,\n    items: state.items.filter(item => item.id !== payload.id)\n  }),\n\n  'ITEM/EDIT': (state, {payload}) => ({\n    ...state,\n    items: state.items.map(item => item.id === payload.id ? {...item, ...payload} : item)\n  })\n})\n\nexport {reducer, itemAction}\n","import React, {Component, ChangeEvent, KeyboardEvent } from 'react';\nimport {\n  IconButton, TextField, FormControl, FormGroup, Tooltip\n} from '@material-ui/core';\nimport {\n  Cancel\n} from '@material-ui/icons';\nimport {\n  CheckCircleOutline\n} from 'mdi-material-ui'\n\nimport {ItemData} from \"../stateStorage\"\n\n\nexport interface ItemEditFormProps extends ItemData {\n  onApply(data: ItemData): void\n  onCancel(): void\n}\n\nexport default class ItemEditForm extends Component<ItemEditFormProps, ItemData> {\n\n  static defaultProps:ItemEditFormProps = {\n    title: '',\n    description: '',\n    onApply: () => {},\n    onCancel: () => {}\n  }\n\n  state:ItemData = {...this.props}\n\n  handleInputChange = (evt: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const {name, value} = evt.target\n\n    this.setState(state => ({\n      ...state,\n      [name]: value\n    }))\n  }\n\n  handleApplyClick = () => {\n    this.props.onApply({...this.state})\n  }\n\n  handleKeyDown = (evt: KeyboardEvent) => {\n    if(evt.key === 'Enter') {\n      this.props.onApply({...this.state})\n    } else if(evt.key === 'Escape') {\n      this.props.onCancel()\n    }\n  }\n\n  render() {\n    const {title, description} = this.state\n    const { onCancel} = this.props;\n\n    return (\n        <FormControl fullWidth>\n          <TextField name='title' label='Title'\n                     autoFocus error={!title}\n                     value={title}\n                     onKeyDown={this.handleKeyDown}\n                     onChange={this.handleInputChange}/>\n          <TextField name='description' label='Description'\n                     multiline\n                     value={description}\n                     onKeyDown={this.handleKeyDown}\n                     onChange={this.handleInputChange}/>\n          <FormGroup row style={{justifyContent: 'flex-end'}}>\n            <Tooltip title=\"Item title cannot be empty\" open={!title}>\n              <span>\n                <Tooltip title=\"Enter\">\n                  <IconButton color='primary' onClick={this.handleApplyClick} disabled={!title}>\n                    <CheckCircleOutline/>\n                  </IconButton>\n                </Tooltip>\n              </span>\n            </Tooltip>\n            <Tooltip title=\"Escape\" placement='right'>\n              <IconButton color='secondary' onClick={onCancel}>\n                <Cancel/>\n              </IconButton>\n            </Tooltip>\n          </FormGroup>\n        </FormControl>\n    )\n  }\n}\n","import React, {Component, ChangeEvent, MouseEvent, FocusEvent} from 'react';\nimport {\n  Typography, Container, Box, Link,\n  List, ListItem, ListItemText, ListItemIcon, ListItemSecondaryAction, Menu, MenuItem,\n  Checkbox, InputBase, Input, IconButton, TextField, FormControl, FormGroup,\n  Slide, Fade, Collapse, Tooltip\n} from '@material-ui/core';\nimport {\n  MoreVert, AddCircleOutline, Cancel, Add\n} from '@material-ui/icons';\nimport {\n  CheckCircleOutline, CheckboxBlankCircleOutline\n} from 'mdi-material-ui'\nimport {connect} from 'react-redux'\n\nimport {itemAction, State, Item, ItemId, ItemData} from \"../stateStorage\"\nimport ItemEditForm, {ItemEditFormProps} from \"./ItemEditForm\"\n\n\ninterface AppState {\n  activeItem: ActiveItem | null\n  addForm: boolean\n}\n\ninterface AppProps {\n  items: State['items']\n\n  itemAdd: typeof itemAction.add,\n  itemToggle: typeof itemAction.toggle,\n  itemRemove: typeof itemAction.remove,\n  itemEdit: typeof itemAction.edit\n}\n\n\ninterface ActiveItem extends ItemId{\n  menuAnchorElement: HTMLElement\n  status: 'menu' |'edit' | 'exiting'\n}\n\n\nclass App extends Component<AppProps, AppState> {\n  state:AppState = {\n    activeItem: null,\n    addForm: false\n  }\n\n  resetActiveItem() {\n    this.setState(state => ({\n      ...state,\n      activeItem: null\n    }))\n  }\n\n  hideAddForm() {\n    this.setState(state => ({\n      ...state,\n      addForm: false\n    }))\n  }\n\n  handleItemToggle = (id:string)=> {\n    this.props.itemToggle({id})\n  }\n\n  handleMenuOpen = (id:string, evt: MouseEvent<HTMLButtonElement>) => {\n    const element = evt.currentTarget;\n    const newActive = this.props.items.find(item => item.id === id)\n\n    if(newActive) {\n      this.setState(state => ({\n        ...state,\n        activeItem: {\n          ...newActive, menuAnchorElement: element, status: 'menu'\n        }\n      }))\n    }\n  }\n\n  handleMenuClose = () => {\n    this.resetActiveItem()\n  }\n\n  handleMenuItemEdit = () => {\n    this.setState(state => state.activeItem ? {\n      ...state,\n      activeItem: {\n        ...state.activeItem,\n        status: 'edit'\n      }\n    } : state)\n  }\n\n  handleItemEditApply = (data: ItemData) => {\n    if(this.state.activeItem) {\n      this.props.itemEdit({...this.state.activeItem, ...data})\n\n      this.resetActiveItem()\n    }\n  }\n\n  handleItemEditCancel = () => {\n    this.resetActiveItem()\n  }\n\n  handleItemAddFormOpen = () => {\n    this.setState(state => ({\n      ...state,\n      addForm: true\n    }))\n  }\n\n  handleItemAddApply = (data: ItemData) => {\n    if(this.state.addForm) {\n      this.props.itemAdd(data)\n      this.hideAddForm()\n    }\n  }\n\n  handleItemAddCancel = () => {\n    this.hideAddForm()\n  }\n\n  handleMenuItemRemove = () => {\n    this.setState(state => state.activeItem ? {\n      ...state,\n      activeItem: {\n        ...state.activeItem,\n        status: 'exiting'\n      }\n    } : state)\n  }\n\n  handleMenuItemRemoveExited = () => {\n    if(this.state.activeItem) {\n      this.props.itemRemove({...this.state.activeItem})\n\n      this.resetActiveItem()\n    }\n  }\n\n  renderMenu(activeItem: ActiveItem) {\n    const {items} = this.props;\n\n    return  (\n        <Menu\n            id=\"item-menu\"\n            anchorEl={activeItem.menuAnchorElement}\n            MenuListProps={{\n              //dense: true\n            }}\n            open\n            onClose={this.handleMenuClose}\n        >\n          <MenuItem\n              disabled={items.find(item => item.id === activeItem.id)!.done}\n              style={{\n                minHeight: '24px'\n              }}\n              onClick={this.handleMenuItemEdit}>Edit</MenuItem>\n          <MenuItem\n              style={{\n                minHeight: '24px'\n              }}\n              onClick={this.handleMenuItemRemove}>Remove</MenuItem>\n        </Menu>\n    )\n  }\n\n\n  renderListItem(item: Item) {\n    const {activeItem} = this.state;\n    const isItemActive = !!activeItem && item.id === activeItem.id\n    const isEdit = isItemActive && activeItem!.status === 'edit'\n\n    return (\n        <ListItem divider selected={isItemActive} disabled={item.done}>\n          <ListItemIcon style={{\n            minWidth: '48px'\n          }}>\n            <Checkbox\n                disabled={isItemActive}\n                color=\"default\" disableRipple\n                checkedIcon={<CheckCircleOutline />} icon={<CheckboxBlankCircleOutline/>}\n                onChange={this.handleItemToggle.bind(this, item.id)}\n                checked={item.done}\n            />\n          </ListItemIcon>\n          {isEdit ?\n              <ItemEditForm\n                  title={item.title} description={item.description}\n                  onApply={this.handleItemEditApply}\n                  onCancel={this.handleItemEditCancel}/>:\n              <ListItemText style = { item.done ? {\n                              textDecoration: 'line-through'\n                            } : undefined}\n                            primary={item.title}\n                            secondary={item.description}/>\n          }\n          <ListItemSecondaryAction>\n            <IconButton onClick={this.handleMenuOpen.bind(this, item.id)} disabled={isEdit}>\n              <MoreVert color='action' fontSize='inherit'/>\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n    )\n  }\n\n\n  renderAddItem() {\n    const {addForm} = this.state\n\n    const icon = (\n        <ListItemIcon style={{\n          minWidth: '48px'\n        }}>\n          <Checkbox\n              disabled\n              color=\"default\" disableRipple\n              icon={<Add/>}\n              checked={false}\n          />\n        </ListItemIcon>\n    )\n\n    if(this.state.addForm) {\n      return (\n          <ListItem divider>\n            {icon}\n            <ItemEditForm\n                onApply={this.handleItemAddApply}\n                onCancel={this.handleItemAddCancel}/>\n          </ListItem>\n      )\n    }\n\n    return (\n        <Tooltip title='Click to add new TODO item' enterDelay={850} leaveDelay={250}>\n          <ListItem button divider onClick={this.handleItemAddFormOpen}>\n            {icon}\n          </ListItem>\n        </Tooltip>\n    )\n  }\n\n\n  render() {\n    const {items} = this.props\n    const {activeItem} = this.state\n\n    return (\n        <Container maxWidth=\"sm\" style={{\n          marginTop: '1rem'\n        }}>\n          <Box>\n            <Typography variant='h5' component='h1' align='center'>TODO</Typography>\n            {activeItem && activeItem.status === 'menu' && this.renderMenu(activeItem)}\n            <List>\n              {\n                items.map( (item, idx)  => {\n                  return (\n                  <Collapse enter={false} appear={false} key={idx}\n                      in={!(activeItem && activeItem.id === item.id && activeItem.status === 'exiting')}\n                      onExited={this.handleMenuItemRemoveExited}\n                  >\n                    {this.renderListItem(item)}\n                  </Collapse>\n                  )\n                })\n              }\n              {\n                this.renderAddItem()\n              }\n            </List>\n          </Box>\n        </Container>\n    );\n  }\n}\n\nexport default connect(\n    ({items}:State) => ({\n      items\n    }), {\n      itemAdd: itemAction.add,\n      itemToggle: itemAction.toggle,\n      itemRemove: itemAction.remove,\n      itemEdit: itemAction.edit\n    }\n)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport {slug} from 'cuid'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport theme from './theme'\nimport {reducer, State} from './stateStorage'\nimport App from './components/App';\n//import Dummy from './components/Dummy'\n\n\nconst pConfig = {\n  key: 'root',\n  storage,\n}\n\nconst pReducer = persistReducer(pConfig, reducer)\n\nconst initialState:State = {\n  items: [\n    {\n      id: 'item_'+slug(),\n      title: 'Go to doctor',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Et, pariatur, ullam.',\n      done: false\n    },\n    {\n      id: 'item_'+slug(),\n      title: 'Buy some food for breakfast',\n      description: 'Aliquid at ducimus ipsum quod totam ut vitae voluptatem.',\n      done: false\n    },\n    {\n      id: 'item_'+slug(),\n      title: 'Fix the car',\n      description: 'Accusamus autem deleniti dolore dolores, expedita illo inventore ipsam, ' +\n          'ipsum libero maiores necessitatibus nesciunt non obcaecati optio provident reprehenderit vel, veniam voluptatem.',\n      done: false\n    },\n    {\n      id: 'item_'+slug(),\n      title: 'Clean the apartment',\n      done: false\n    }\n  ]\n}\n\nconst store = createStore(pReducer, initialState, composeWithDevTools())\nconst persistor = persistStore(store)\n\nReactDOM.render(\n    //<ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <CssBaseline />\n        <App/>\n      </PersistGate>\n    </Provider>\n    //</ThemeProvider>\n ,\n    document.getElementById('root'));\n"],"sourceRoot":""}